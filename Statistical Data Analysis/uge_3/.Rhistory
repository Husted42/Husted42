qt(0.975, df = 13-1)
# T-Value
t_val <- mean(data) / sd(data) * sqrt(length(data))
t_val
# P-value
2 * (1 - pt(t_val, df = (length(data) - 1) )) #
?pt()
# Confidence
mean(data) + c(-1, 1) * qt(0.975, df = 13-1) * sd(data)/sqrt(13)
t.test(data)
qt(0.975, df = 13-1)
# T-Value
t_val <- mean(data) / sd(data) * sqrt(length(data))
t_val
# P-value
2 * (1 - pt(t_val, df = (length(data) - 1) )) # pt gives the distribution function
# Confidence
mean(data) + c(-1, 1) * qt(0.975, df = 13-1) * sd(data)/sqrt(13)
t.test(data)
qt(0.975, df = 13-1)
# T-Value
t_val <- mean(data) / sd(data) * sqrt(length(data))
t_val
# P-value
2 * (1 - pt(t_val, df = (length(data) - 1) )) # pt gives the distribution function
# Confidence
mean(data) + c(-1, 1) * qt(0.975, df = 13-1) * sd(data)/sqrt(13)
# Alternative approch
t.test(data)
qt(0.975, df = 13-1)
# T-Value
t_val <- mean(data) - 340 / sd(data) * sqrt(length(data))
t_val
# P-value
2 * (1 - pt(t_val, df = (length(data) - 1) )) # pt gives the distribution function
# Confidence
mean(data) + c(-1, 1) * qt(0.975, df = 13-1) * sd(data)/sqrt(13)
# Alternative approch
t.test(data)
qt(0.975, df = 13-1)
# T-Value
t_val <- mean(data) - 340 / sd(data) * sqrt(length(data))
t_val
# P-value
2 * (1 - pt(t_val, df = (length(data) - 1) )) # pt gives the distribution function
# Confidence
mean(data) + c(-1, 1) * qt(0.975, df = 13-1) * sd(data)/sqrt(13)
# Alternative approch
t.test(data)
t_obs <- mean(data) - 340 / sd(data) * sqrt(length(data))
t_obs
t_obs <- mean(data) - 340 / sd(data) * sqrt(length(data))
t_obs
t_obs <- mean(data) - 340 / sd(data) * sqrt(length(data))
t_obs
t_obs <- mean(data) - 340 / sd(data) * sqrt(length(data))
t_obs
t_obs <- mean(data) - 340 / sd(data) * sqrt(length(data))
t_obs
t_obs <- mean(data) - 340 / sd(data) * sqrt(length(data))
t_obs
t_obs <- mean(data) - 340 / sd(data) * sqrt(length(data))
t_obs
qt(0.975, df = 13-1)
# T-Value
t_val <- mean(data) / sd(data) * sqrt(length(data))
t_val
# P-value
2 * (1 - pt(t_val, df = (length(data) - 1) )) # pt gives the distribution function
# Confidence
mean(data) + c(-1, 1) * qt(0.975, df = 13-1) * sd(data)/sqrt(13)
# Alternative approch
t.test(data)
t_obs <- mean(data) - 340 / sd(data) * sqrt(length(data))
2 * (1 - pt(t_obs, df = (length(data) - 1) )) # pt gives the distribution function
t_obs
t_obs <- mean(data) - 340 / sd(data) * sqrt(length(data))
2 * (1 - pt(t_obs, df = (length(data) - 1) )) # pt gives the distribution function
mean(data)
t_obs
t_obs <- (mean(data) - 340) / sd(data) * sqrt(length(data))
2 * (1 - pt(t_obs, df = (length(data) - 1) )) # pt gives the distribution function
mean(data)
t_obs
t_obs <- (mean(data) - 340) / sd(data) * sqrt(length(data))
2 * (1 - pt(t_obs, df = (length(data) - 1) )) # pt gives the distribution function
t_obs
t_obs <- (mean(data) - 340) / sd(data) * sqrt(length(data))
2 * (1 - pt(t_obs, df = (length(data) - 1) )) # pt gives the distribution function
library(MASS)
data(cats)
library(tidyverse)
cats <- transform(cats, Forhold = Hwt / Bwt)
head(cats, n=3)
library(MASS)
data(cats)
library(tidyverse)
cats <- transform(cats, Forhold = Hwt / Bwt)
head(cats, n=3)
summarize(group_by(cats, type), n = n(),
tid_mean = mean(tid), tid_sd = sd(tid))```
library(MASS)
data(cats)
library(tidyverse)
cats <- transform(cats, Forhold = Hwt / Bwt)
head(cats, n=3)
summarize(group_by(cats, Sex), n = n(),
tid_mean = mean(tid), tid_sd = sd(tid))```
library(MASS)
data(cats)
library(tidyverse)
cats <- transform(cats, Forhold = Hwt / Bwt)
head(cats, n=3)
summarize(group_by(cats, sex), n = n(),
tid_mean = mean(tid), tid_sd = sd(tid))```
library(MASS)
data(cats)
library(tidyverse)
cats <- transform(cats, Forhold = Hwt / Bwt)
head(cats, n=3)
summarize(group_by(cats, Sex), n = n(),
tid_mean = mean(tid), tid_sd = sd(tid))
library(MASS)
data(cats)
library(tidyverse)
cats <- transform(cats, Forhold = Hwt / Bwt)
head(cats, n=3)
summarize(group_by(cats, Sex), n = n(),
mean_forhold = mean(Forhold), sd_forhold = sd(Forhold))
ggplot(data = cats, aes(x = sex, y = forhold)) +
geom_boxplot(outliers = TRUE) +
xlab("sex") + ylab("forhold")
ggplot(data = cats, aes(x = Sex, y = forhold)) +
geom_boxplot(outliers = TRUE) +
xlab("sex") + ylab("forhold")
ggplot(data = cats, aes(x = Sex, y = Forhold)) +
geom_boxplot(outliers = TRUE) +
xlab("Sex") + ylab("Forhold")
lm(Forhold ~ Sex - 1, data = cats)
m1 <- lm(Forhold ~ Sex - 1, data = cats)
summary(m1)
coefficients(m1)
3.91512 - 3.89455
m1 <- lm(Forhold ~ Sex - 1, data = cats)
summary(m1)
coefficients(m1)
summarize(group_by(cats, Sex), n = n(),
mean_forhold = mean(Forhold), sd_forhold = sd(Forhold))
# Estimat for forskellen
3.91512 - 3.89455
# RSE/s - sqrt(1/n_1 + 1/n_2)
0.577 * sqrt((1/47) + (1/97))
# RSE/s - sqrt(1/n_1 + 1/n_2)
0.5277 * sqrt((1/47) + (1/97))
# RSE/s - sqrt(1/n_1 + 1/n_2)
0.5277 * sqrt((1/47) + (1/97))
# RSE/s - sqrt(1/n_1 + 1/n_2)
0.5277 * sqrt((1/47) + (1/97))
# RSE/s - sqrt(1/n_1 + 1/n_2)
0.5277 * sqrt((1/47) + (1/97))
# RSE/s - sqrt(1/n_1 + 1/n_2)
0.5277 * sqrt((1/47) + (1/97))
(3.915119	-  3.894547) + c(-1, 1) * qt(0.975, df = (47+97-2)) * (0.5277 * sqrt((1/47) + (1/97)))
View(linreg_k)
df_soy = data(soybean)
df_soy = data(soybean)
head(df_soy, n = 3)
data(soybean)
head(soybean, n = 3)
t.test(stress, nostress, paired=TRUE)
t.test(soybean$stress, soybean$nostress, paired=TRUE)
t.test(soybean$stress, soybean$nostress, paired=TRUE)
t.test(soybean$stress, soybean$nostress, paired=FALSE)
knitr::opts_chunk$set(echo = TRUE)
data <- c(339, 339, 339, 340, 341, 340, 343, 348, 341, 346, 342, 339, 337)
df <- data.frame(data)
head(df, n = 3)
qt(0.975, df = 13-1)
# T-Value
t_val <- mean(data) / sd(data) * sqrt(length(data))
t_val
# P-value
2 * (1 - pt(t_val, df = (length(data) - 1) )) # pt gives the distribution function
# Confidence
mean(data) + c(-1, 1) * qt(0.975, df = 13-1) * sd(data)/sqrt(13)
# Alternative approch
t.test(data)
t_obs <- (mean(data) - 340) / sd(data) * sqrt(length(data))
2 * (1 - pt(t_obs, df = (length(data) - 1) )) # pt gives the distribution function
library(MASS)
data(cats)
library(tidyverse)
cats <- transform(cats, Forhold = Hwt / Bwt)
head(cats, n=3)
summarize(group_by(cats, Sex), n = n(),
mean_forhold = mean(Forhold), sd_forhold = sd(Forhold))
ggplot(data = cats, aes(x = Sex, y = Forhold)) +
geom_boxplot(outliers = TRUE) +
xlab("Sex") + ylab("Forhold")
m1 <- lm(Forhold ~ Sex - 1, data = cats)
summary(m1)
coefficients(m1)
summarize(group_by(cats, Sex), n = n(),
mean_forhold = mean(Forhold), sd_forhold = sd(Forhold))
# RSE/s - sqrt(1/n_1 + 1/n_2)
0.5277 * sqrt((1/47) + (1/97))
(3.915119	-  3.894547) + c(-1, 1) * qt(0.975, df = (47+97-2)) * (0.5277 * sqrt((1/47) + (1/97)))
data(soybean)
head(soybean, n = 3)
t.test(soybean$stress, soybean$nostress, paired=TRUE)
t.test(soybean$stress, soybean$nostress, paired=FALSE)
View(m1)
knitr::opts_chunk$set(echo = TRUE)
library("isdals")
data("chiken")
data("chicken")
library("isdals")
data("chicken")
head(chicken, = 3)
head(chicken, n = 3)
View(chicken)
View(chicken)
library("isdals")
data("chicken")
head(chicken, n = 3)
chicken$feed <- relevel(factor(chicken$feed), ref="1")
head(chicken, n = 3)
m1 <- lm(gain ~ feed, data = chicken)
summary(m1)
summary(m1)$coefficiants
m1 <- lm(gain ~ feed, data = chicken)
summary(m1)
summary(m1)$coefficients
m1 <- lm(gain ~ feed, data = chicken)
summary(m1)
m1 <- lm(gain ~ feed, data = chicken)
summary(m1)
coefficients(m1)
confint(m1)
622.50 +  411.25
# Mean_1 - Mean_2  +- * t_(0.975, df) * RSE * sqrt(1/n_1 + 1/n_2)
(167.50) + c(-1, 1) * qt(0.975, df = (4+4-2)) * (72.18 * sqrt((1/4) + (1/4)))
# Mean_1 - Mean_2  +- * t_(0.975, df) * RSE * sqrt(1/n_1 + 1/n_2)
(291.25 - 167.5) + c(-1, 1) * qt(0.975, df = (4+4-2)) * (72.18 * sqrt((1/4) + (1/4)))
knitr::opts_chunk$set(echo = TRUE)
# Import libraries
library("ggplot2")
library("tidyverse")
library("isdals")
# Load data
data("tartar")
head(tartar, n = 3)
# refactor to make control group the primary group
tartar$treat <- relevel(factor(tartar$treat), ref="Control")
m1 <- lm(index ~ treat , data = tartar)
tartar_contol <- subset(tartar, treat=="Control")
tartar_P207 <- subset(tartar, treat=="P2O7")
tartar_HMP <- subset(tartar, treat=="HMP")
qqnorm(tartar_contol$index, main = "Index for group : Control")
abline(a = mean(tartar_contol$index), b = sd(tartar_contol$index))
qqnorm(tartar_P207$index, main = "Index for group : P207")
abline(a = mean(tartar_P207$index), b = sd(tartar_P207$index))
qqnorm(tartar_HMP$index, main = "Index for group : HMP")
abline(a = mean(tartar_HMP$index), b = sd(tartar_HMP$index))
## Boxplot
ggplot(data = tartar, aes(x = treat, y = index)) +
geom_boxplot(outliers = TRUE) +
xlab("Treat") + ylab("Index")
m2 <- lm(index ~ treat -1 , data = tartar)
summary(m2)
summary(m1)
confint(m1)
library("readxl")
?read.table
data1 <- read.table(file = "data/feb2021opg1.txt", header = 1)
head(data1, n = 3)
data1$fald <- data1$jan - data1$dec
t.test(data1$fald, mu = 0)
m3 <- lm(fald ~ dec, data = data1)
summary(m3)
library("readxl")
?read.table
data1 <- read.table(file = "data/feb2021opg1.txt", header = 1)
head(data1, n = 30)
# Mean_1 - Mean_2  +- * t_(0.975, df) * RSE * sqrt(1/n_1 + 1/n_2)
(291.25 - 167.5) + c(-1, 1) * qt(0.975, df = (4+400-2)) * (72.18 * sqrt((1/4) + (1/4)))
# Mean_1 - Mean_2  +- * t_(0.975, df) * RSE * sqrt(1/n_1 + 1/n_2)
(291.25 - 167.5) + c(-1, 1) * qt(0.975, df = (4+400-2)) * (72.18 * sqrt((1/400) + (1/4)))
# Mean_1 - Mean_2  +- * t_(0.975, df) * RSE * sqrt(1/n_1 + 1/n_2)
(291.25 - 167.5) + c(-1, 1) * qt(0.975, df = (4+400-2)) * (72.18 * sqrt((1/400) + (1/4)))
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt(n)
int_b[0] - int_b[1]
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt(n)
print(int_b[0] - int_b[1])
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt(n)
print(int_b[0])
}
int_b
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_b
print(int_b[0])
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_b
print(as.numeric(int_b[0]))
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_b
sprintf(as.numeric(int_b[0]))
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_b
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
sprintf("%f", int_b)
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
sprintf("%f", 7)
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
sprintf("%f.", 7)
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
sprintf("%.2f", 7)
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
cat(sprintf("%.2f", 7))
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
cat(sprintf("%.2f", int_b[0] - int_b[1]))
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
diff <- int_b[0] - int_b[1])
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
diff <- (int_b[0] - int_b[1])
diff <- as.numeric(diff)
cat(sprintf("%.2f", diff)
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
diff <- (int_b[0] - int_b[1])
diff <- as.numeric(diff)
cat(sprintf("%.2f", 7)
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
diff <- (int_b[0] - int_b[1])
diff <- as.numeric(diff)
cat(sprintf("%.2f", 7))
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
diff <- (int_b[0] - int_b[1])
diff <- as.numeric(diff)
cat(sprintf("%.2f", diff))
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
diff <- (int_b[0] - int_b[1])
diff <- as.numeric(diff)
cat(sprintf("%.2f", diff))
}
for (n in 1:10){
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
diff <- (int_b[0] - int_b[1])
diff <- as.numeric(diff)
cat(sprintf("%.2f", diff))
}
n <- 100
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_c <- 411.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_d <- 291.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
n <- 100
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_c <- 411.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_d <- 291.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_b
int_c
int_d
n <- 100
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_c <- 411.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_d <- 291.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_b[0] - int_b[1]
int_c[0] - int_c[1]
int_d[0] - int_d[1]
n <- 100
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_c <- 411.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_d <- 291.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_b[1] - int_b[2]
int_c[1] - int_c[2]
int_d[1] - int_d[2]
n <- 100
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_c <- 411.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_d <- 291.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_b[2] - int_b[1]
int_c[2] - int_c[1]
int_d[2] - int_d[1]
range <- 100
for (n in 1:10) {
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_c <- 411.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_d <- 291.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
val_b <- int_b[2] - int_b[1]
val_c <- int_c[2] - int_c[1]
val_d <- int_d[2] - int_d[1]
cat(val_b)
}
range <- 100
for (n in 1:10) {
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_c <- 411.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_d <- 291.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
val_b <- int_b[2] - int_b[1]
val_c <- int_c[2] - int_c[1]
val_d <- int_d[2] - int_d[1]
val_b
}
range <- 100
for (n in 1:10) {
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_c <- 411.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_d <- 291.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
val_b <- int_b[2] - int_b[1]
val_c <- int_c[2] - int_c[1]
val_d <- int_d[2] - int_d[1]
cat(val_b)
}
range <- 100
for (n in 1:10) {
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_c <- 411.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_d <- 291.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
val_b <- int_b[2] - int_b[1]
val_c <- int_c[2] - int_c[1]
val_d <- int_d[2] - int_d[1]
cat("\n")
cat(val_b)
}
?c
range <- c(1:100)
for (n in range) {
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_c <- 411.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_d <- 291.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
val_b <- int_b[2] - int_b[1]
val_c <- int_c[2] - int_c[1]
val_d <- int_d[2] - int_d[1]
cat("\n")
cat(val_b)
}
range <- c(1:50)
for (n in range) {
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_c <- 411.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_d <- 291.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
val_b <- int_b[2] - int_b[1]
val_c <- int_c[2] - int_c[1]
val_d <- int_d[2] - int_d[1]
cat("\n")
cat(val_b)
}
range <- c(41:51)
for (n in range) {
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_c <- 411.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_d <- 291.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
val_b <- int_b[2] - int_b[1]
val_c <- int_c[2] - int_c[1]
val_d <- int_d[2] - int_d[1]
cat("\n")
cat(val_b)
}
range <- c(41:51)
for (n in range) {
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_c <- 411.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_d <- 291.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
val_b <- int_b[2] - int_b[1]
val_c <- int_c[2] - int_c[1]
val_d <- int_d[2] - int_d[1]
cat("\n")
cat(n, val_b)
}
range <- c(45:51)
for (n in range) {
int_b <- 167 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_c <- 411.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
int_d <- 291.25 + c(-1, 1) * 1.96 * 72.18/sqrt( n )
val_b <- int_b[2] - int_b[1]
val_c <- int_c[2] - int_c[1]
val_d <- int_d[2] - int_d[1]
cat("\n")
cat(n, val_b)
}
