function findRight(lst, tgt)
    result = []
    function helper(lst, tgt, comb, result)
        if tgt equals 0 then
            append comb to result
        else if tgt is less than 0 then
            return
        else
            for i in range from 0 to length of lst - 1 do
                call helper with arguments (lst[i+1:], tgt-lst[i], comb+[lst[i]], result)
    return result

function JacobsFrog(n)
    lst = []
    for i from 1 to n do
        append i to lst
    if sum of lst divided by 2 has a remainder of 1 then
        print "Not possible"
        return None
    right = findRight(lst, sum of lst divided by 2)[0]
    for i from 1 to length of lst do
        if lst[i-1] is in right then
            set lst[i-1] to True
        else
            set lst[i-1] to False
    for j from 1 to length of lst do
        if lst[j-1] is True then
            print "jump length " + j + " right"
        else
            print "jump length " + j + " left"
    print lst