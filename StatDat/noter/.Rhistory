m1 <- lm(Kd ~ Treat + Lokation, data = pestgolf)
summary(m1)
# Intercept + Treat05 + LokationHONE
0.89411 + 0.22411 + (-0.46350)
predict(m1, data.frame(Lokation = "HONE", Treat = "T05"), interval = "p")
m2 <- lm(Kd ~ Treat + Lokation + Treat * Lokation, data = pestgolf)
summary(m2)
# Intercept + Treat05 + LokationHONE + TreatT05:LokationHONE
0.848667 + 0.315000 + -0.459333 + (-0.008333)
predict(m2, data.frame(Lokation = "HONE", Treat = "T05"), interval = "p")
fullmodel <- lm(Kd ~ Treat + Lokation + Treat * Lokation, data = pestgolf)
nullmodel <- lm(Kd ~ Treat + Lokation, data = pestgolf)
anova(nullmodel, fullmodel)
drop1(m2, test="F")
m1 <- lm(bodyfat ~ hip + abdomen, data = data_johnson)
summary(m1)
m2 <- lm(bodyfat ~ offset((-0.5)*hip + (0.8)*abdomen), data = data_johnson) ## Nulmodel
anova(m2, m1)
dbinom(1, size=3, prob=0.6) ## P(Y=1)
pbinom(2, size=3, prob=0.6) ## P(Y<=2)
dbinom(0, size=3, prob=0.6) ## P(Y=0)
1-dbinom(0, size=3, prob=0.6) ## P(Y>=1)
binom.test(13, 31, p = 1/3)
prop.test(c(26,12), c(50,50), correct=FALSE)
linreg <- lm(bodyfat ~ hip, data = data_johnson) # Fit
# Man kan ikke se det i R-output, men den plotter begge funktioner ved siden af hindanden når man har knit'et
plot(fitted(linreg), rstandard(linreg))
abline(0,0, col = 'Red')
qqnorm(rstandard(linreg))
abline(0,1, lty=2)
plot(fitted(linreg), rstandard(linreg))
abline(0,0, col = 'Red')
qqnorm(rstandard(linreg))
abline(0,1, lty=2)
linreg <- lm(Hwt ~ Bwt, data = cats) ### estimer regressionslinje (Kun nødvendig for abline)
plot(cats$Bwt, cats$Hwt, xlab = "Bodyweight(kg)", ylab = "Heart weight (g)", main = "Cats data")
abline(a = -0.3567, b = 4.0341, col = "red") # a = skæring, b = hældning
qqnorm(cats$Bwt, main="Title")
abline(mean(cats$Bwt), sd(cats$Bwt), lwd = 1, col = "red")
hist(kData$hojde, prob = TRUE, xlab = "Hojde", main = "Kvinder", col = "lightgrey")
f1 <- function(x) dnorm(x, mean = mean(kData$hojde), sd = sd(kData$hojde))
plot(f1, 150, 190, col = "red", add = TRUE, lwd = 3)
data_mean = 41.5
data_sd = 1.4
p_1 <- pnorm(q = c(42.2), sd = data_sd, mean = data_mean, lower.tail = TRUE) # Mindre end 42
p_2 <- pnorm(q = c(40), sd = data_sd, mean = data_mean, lower.tail = TRUE) # Mindre end 40
p_1 - p_2
ggplot(data.frame(x = c(data_mean - 5, data_mean + 5)), aes(x)) +
stat_function(fun = dnorm, n = 1000, args = list(mean = data_mean, sd = data_sd)) +
# Coloring
stat_function(fun = dnorm, args = list(mean = data_mean, sd = data_sd),
xlim = c(40, 42.2), # Defines the interval
geom = "area", fill = "blue") +
labs(x = "Marginalskatteprocent", y = "Densitet")
# Kontinuert ~ kategorisk
boxplot(cats$Hwt ~ cats$Sex)
hist(log(cats$Hwt), # Data
xlab="Body weight (kg)", # X label
main="Cats: Body weight", # Title
nclass=20, # Antal søjler
prob=TRUE, # Samlet areal = 1
col = "blue") # Farve
# mu - qt * s/sqrt(n)
n = 7
mu =17
SE = 3
mu + c(-1, 1) * qt(0.975, df=n-1) * SE
# mu - qt * s/sqrt(n)
n = 7
mu =17
s = 3
mu + c(-1, 1) * qt(0.975, df=n-1) * (s/sqrt(n))
lower = 50
upper = 62
(upper - lower) / 2
mu = 200 # Middelværdi
s = 40 # Spredning
obs = 190 #Observation
# Under
pnorm(obs, mean = mu, sd = s)
#Over
1 - pnorm(obs, mean = mu, sd = s)
mu = 15.5 # Middelværdi
s = 3 # Spredning
upper = 16.5 # Til
lower = 14 # Fra
pnorm(upper, mean = mu, sd = s)
pnorm(lower, mean = mu, sd = s)
cat("\n")
pnorm(upper, mean = mu, sd = s) - pnorm(lower, mean = mu, sd = s)
mu = 114.8 # Middelværdi
s = 13.1 # Spredning
x = 0.35 # percentage to check
qnorm(x, mean = mu, sd = s)
s = 2
n = 16
s / sqrt(16)
beta = 5.12 #Hældning
SE = 3.2 # Standard error
n = 87 # Antal observationer
hypotese = 0 # hypotesen om at "den sande hældning" er 0
# Test af hypotesen H: beta=4
T = (beta - hypotese) / SE
# Beregning af p-vaerdi
P = 2*(1-pt(T, df = n - 2))
T
P
n = 104 # Antal observationer
beta = 33.2 # Hældning
SE = 2.8 # Standard error
int = .95 # Konfidensinterval
conf = 1 - (1 - int) /2
conf
# 2 frihedsgrader for lineær regression
beta + c(-1, 1) * qt(conf, df=n-2) * SE
n <- 20 # Antal Observationer
k <- 1 # Antal grupper (I gruppe A)
qt(0.975, df = n-1)
beta = 3.19 #Hældning
SE = .89 # Standard error
n = 52 # Antal observationer
hypotese = 0 # hypotesen om at "den sande hældning" er 0
# Test af hypotesen H: beta=4
T = (beta - hypotese) / SE
# Beregning af p-vaerdi
P = 2*(1-pt(T, df = n - 2))
T
P
pnorm(0, mean = 4, sd = 2.8)
my_data <- cats
mean(my_data$bwt) + c(-1, 1) * qt(0.975, df = 25 - 1) * sd(my_data$bwt)/sqrt(25)
my_data <- cats
mean(my_data$bwt, na.rm = T) + c(-1, 1) * qt(0.975, df = 25 - 1) * sd(my_data$bwt, na.rm = T)/sqrt(25)
my_data <- cats
mean(my_data$bwt, na.rm = T) + c(-1, 1) * qt(0.975, df = 25 - 1) * sd(my_data$bwt, na.rm = T)/sqrt(25)
my_data <- cats
mean(my_data$bwt, na.rm = T) + c(-1, 1) * qt(0.975, df = 25 - 1) * sd(my_data$bwt, na.rm = T)/sqrt(25)
my_data <- na.omit(cats)
mean(my_data$bwt) + c(-1, 1) * qt(0.975, df = 25 - 1) * sd(my_data$bwt)/sqrt(25)
my_data <- na.omit(cats)
mean(my_data$bwt) + c(-1, 1) * qt(0.975, df = 25 - 1) * sd(my_data$bwt)/sqrt(25)
my_data <- na.omit(catsbwt)
my_data <- na.omit(cats$bwt)
mean(my_data) + c(-1, 1) * qt(0.975, df = 25 - 1) * sd(my_data)/sqrt(25)
# Sample dataset
my_data <- data.frame(
Name = c('Alice', 'Bob', NA, 'Diana'),
Age = c(25, NA, 28, 32),
Salary = c(NA, 50000, 60000, 45000)
)
# Removing rows with NA values
clean_data <- na.omit(my_data)
# Displaying the cleaned dataset
print(clean_data)
# Sample dataset
my_data <- data.frame(
Name = c('Alice', 'Bob', NA, 'Diana'),
Age = c(25, NA, 28, 32),
Salary = c(NA, 50000, 60000, 45000)
)
# Removing rows with NA values
clean_data <- na.omit(my_data)
# Displaying the cleaned dataset
print(clean_data)
my_data <- na.omit(cats)
mean(my_data$bwt) + c(-1, 1) * qt(0.975, df = 25 - 1) * sd(my_data$bwt)/sqrt(25)
my_data <- na.omit(cats)
mean(my_data$Bwt) + c(-1, 1) * qt(0.975, df = 25 - 1) * sd(my_data$Bwt)/sqrt(25)
my_data <- na.omit(cats)
mean(my_data$Bwt) + c(-1, 1) * qt(0.975, df = 25 - 1) * sd(my_data$Bwt)/sqrt(length(my_data$Bwt))
my_data <- na.omit(cats)
length(my_data$Bwt)
mean(my_data$Bwt) + c(-1, 1) * qt(0.975, df = 25 - 1) * sd(my_data$Bwt)/sqrt(length(my_data$Bwt))
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
studData2 <- read_excel("../data/stud2017-v2.xls")
studData2 <- studData2[,  c("kon", "hojde")]
### Data for kvinder
kData <- subset(studData2, kon=="Kvinde")
### Gennemsnit of stikprævespredning
mean(kData$hojde, na.rm=TRUE)
sd(kData$hojde, na.rm=TRUE)
sum(!is.na(kData$hojde))
### t-fraktil
qt(0.975, df=103)
### Nedre og øvre grænse, manuelt
168.524 - 1.9833 * 6.639972/sqrt(104)
168.524 + 1.9833 * 6.639972/sqrt(104)
### Vha. t.test
t.test(kData$hojde)
### Vha. lm
model <- lm(hojde ~ 1, data=kData)
summary(model)
confint(model)
my_data <- read.table("../data/gaet8_2024.txt", header = T)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
studData2 <- read_excel("../data/stud2017-v2.xls")
studData2 <- studData2[,  c("kon", "hojde")]
### Data for kvinder
kData <- subset(studData2, kon=="Kvinde")
### Gennemsnit of stikprævespredning
mean(kData$hojde, na.rm=TRUE)
sd(kData$hojde, na.rm=TRUE)
sum(!is.na(kData$hojde))
### t-fraktil
qt(0.975, df=103)
### Nedre og øvre grænse, manuelt
168.524 - 1.9833 * 6.639972/sqrt(104)
168.524 + 1.9833 * 6.639972/sqrt(104)
### Vha. t.test
t.test(kData$hojde)
### Vha. lm
model <- lm(hojde ~ 1, data=kData)
summary(model)
confint(model)
my_data <- read.table("../data/gaet8_2024.txt", header = T)
knitr::opts_chunk$set(echo = TRUE)
head(lyskilde, n=3)
head(lyskilde, n=3)
knitr::opts_chunk$set(echo = TRUE)
dbinom(3, size=5, prob=0.55) ## P(Y=3)
1 - pbinom(3, size=5, prob=0.55) ## P(Y>=4)
13/20
p <- 0.65
n <- 20
p + c(-1, 1) * 1.96 * sqrt((p * (1-p) )/n)
?prop.test()
prop.test(13, 20, p = 0.65, correct = FALSE)
result <- binom.test(13, 20, p = 0.5)
result
for (x in 1:20) {
res <- binom.test(x, 20, p = 0.5)
cat(x, res$p.value)
cat("\n")
}
binom.test(8, 600)
binom.test(4, 493)
binom.test(10, 497)
(10 / 497) - (4 / 493)
0.009689816 - 0.002214977
0.036690693 - 0.020642826
prop.test(c(10,4), c(497,493), correct=FALSE)
sd1tabel <- matrix(c(14, 51, 52, 401), 2, 2)
sd1tabel
rownames(sd1tabel) <- c("m1-Stresset", "m1-Ikke stresset")
colnames(sd1tabel) <- c("m2-Stresset", "m2-Ikke stresset")
sd1tabel
chisq.test(sd1tabel, correct = FALSE)
sd2tabel <- matrix(c(451, 532, 27, 313, 28, 539, 145, 56, 456), 3, 3)
rownames(sd2tabel) <- c("A", "B", "C")
colnames(sd2tabel) <- c("South", "Asia", "Africa")
sd2tabel
chisq.test(sd1tabel, correct = FALSE)
lyskilde <- read.table("data/lyskilde.txt", header = 1)
head(lyskilde, n = 3)
linreg <- lm(frekvens ~ farve , data = lyskilde)
plot(fitted(linreg), rstandard(linreg))
abline(0,0, col = 'Red')
qqnorm(rstandard(linreg))
abline(0,1, lty=2)
nullModel <- lm(frekvens ~ 1 , data = lyskilde)
anova(nullModel, linreg)
summary(linreg)
head(lyskilde, n=3)
lyskilde_grøn <- lyskilde
lyskilde_grøn$farve <- factor(lyskilde_grøn$farve)
lyskilde_grøn$farve <- relevel(lyskilde_grøn$farve, ref = 'brun')
linreg_g <- lm(frekvens ~ farve , data = lyskilde_grøn)
confint(linreg_g)
ss <- read.table("data/ss2017-18.txt", header = 1)
head(ss, n = 3)
unique(ss$studie)
m1 <- lm(figur2 ~ studie + kon, data = ss)
m2 <- lm(log(figur2) ~ studie + kon + studie * kon, data = ss)
summary(m1)
summary(m2)
plot(fitted(m1), rstandard(m1))
abline(0,0, col = 'Red')
plot(fitted(m2), rstandard(m2))
abline(0,0, col = 'Red')
qqnorm(rstandard(m1))
abline(0,1, lty=2)
qqnorm(rstandard(m2))
abline(0,1, lty=2)
Nullmodel <- lm(log(figur2) ~ studie + kon, data = ss)
anova(Nullmodel, m2)
summary(Nullmodel)
confint(Nullmodel)
exp(-0.3416929)
exp(4.828164) / exp(4.828164 + -0.211680)
FullModel <- lm(log(figur2) ~ studie + kon, data = ss)
Nullmodel <- lm(log(figur2) ~ kon, data = ss)
anova(Nullmodel, FullModel)
0.35750 - 2.01 * .12596
0.35750 + 2.01 * .12596
0.35750 - 0.33206 + 0.35750
1.52087 + 0.19055 - 0.12263
# Esitmate / SE
0.19055 /  0.09097
?pnorm()
val <- 120
mean <- 114.5
sd <- 6.9
1 - pnorm(val, mean = mean, sd = sd)
data1 <- read.table(file = "data/nov2023opg1.txt", header = T)
head(data1, n=3)
m1 <- lm(length ~ age, data = data1)
confint(m1)
summary(m1)
predict(m1, data.frame(age=3), interval='c')
predict(m1, data.frame(age=3), interval='p')
confint(m1)
summary(m1)
data2 <- read.table(file = "data/nov2023opg2.txt", header = T)
head(data2, n = 3)
unique(data2$stamme)
model1 <- lm(kryds ~ sex + stamme, data = data2)
plot(fitted(model1), rstandard(model1))
abline(0,0, col = 'Red')
qqnorm(rstandard(model1))
abline(0,1, lty=2)
predict(model1, data.frame(sex = 'F', stamme = 'normal'))
predict(model1, data.frame(sex = 'F', stamme = 'transgen'))
NullModel <- lm(kryds ~ 1, data = data2)
anova(NullModel, model1)
fullmodel <- lm(kryds ~ sex + stamme + sex*stamme, data = data2)
nullmodel <- lm(kryds ~ sex + stamme, data = data2)
anova(nullmodel, fullmodel)
knitr::opts_chunk$set(echo = TRUE)
dbinom(3, size=5, prob=0.55) ## P(Y=3)
1 - pbinom(3, size=5, prob=0.55) ## P(Y>=4)
13/20
p <- 0.65
n <- 20
p + c(-1, 1) * 1.96 * sqrt((p * (1-p) )/n)
?prop.test()
prop.test(13, 20, p = 0.65, correct = FALSE)
result <- binom.test(13, 20, p = 0.5)
result
for (x in 1:20) {
res <- binom.test(x, 20, p = 0.5)
cat(x, res$p.value)
cat("\n")
}
binom.test(8, 600)
binom.test(4, 493)
binom.test(10, 497)
(10 / 497) - (4 / 493)
0.009689816 - 0.002214977
0.036690693 - 0.020642826
prop.test(c(10,4), c(497,493), correct=FALSE)
sd1tabel <- matrix(c(14, 51, 52, 401), 2, 2)
sd1tabel
rownames(sd1tabel) <- c("m1-Stresset", "m1-Ikke stresset")
colnames(sd1tabel) <- c("m2-Stresset", "m2-Ikke stresset")
sd1tabel
chisq.test(sd1tabel, correct = FALSE)
sd2tabel <- matrix(c(451, 532, 27, 313, 28, 539, 145, 56, 456), 3, 3)
rownames(sd2tabel) <- c("A", "B", "C")
colnames(sd2tabel) <- c("South", "Asia", "Africa")
sd2tabel
chisq.test(sd1tabel, correct = FALSE)
lyskilde <- read.table("data/lyskilde.txt", header = 1)
head(lyskilde, n = 3)
linreg <- lm(frekvens ~ farve , data = lyskilde)
plot(fitted(linreg), rstandard(linreg))
abline(0,0, col = 'Red')
qqnorm(rstandard(linreg))
abline(0,1, lty=2)
nullModel <- lm(frekvens ~ 1 , data = lyskilde)
anova(nullModel, linreg)
summary(linreg)
# Del datasættet i to
lys_grøn <- lyskilde[lyskilde$farve == 'groen']
# Del datasættet i to
lys_grøn <- subset(lyskilde, farve=="groen")
lys_brun <- subset(lyskilde, farve=="brun")
# Beregning af hvert gennemsnit
mean_1 <- mean(lys_grøn$farve)
mean_2 <- mean(lys_brun$farve)
s <- 1.547
# Differencer
mean_diff <- mean_1 - mean_2
SE_diff <- sqrt( (1 / length(lys_grøn)) + (1 / length(lys_brun)) )
t_value <- qt(0.975, 2)
mean_diff + c(-1, 1) * SE_diff
# Del datasættet i to
lys_grøn <- subset(lyskilde, farve=="groen")
lys_brun <- subset(lyskilde, farve=="brun")
lys_brun
# Beregning af hvert gennemsnit
mean_1 <- mean(lys_grøn$farve)
mean_2 <- mean(lys_brun$farve)
s <- 1.547
# Differencer
mean_diff <- mean_1 - mean_2
SE_diff <- sqrt( (1 / length(lys_grøn)) + (1 / length(lys_brun)) )
t_value <- qt(0.975, 2)
mean_diff + c(-1, 1) * SE_diff
# Del datasættet i to
lys_grøn <- subset(lyskilde, farve=="groen")
lys_brun <- subset(lyskilde, farve=="brun")
print(lys_brun)
# Beregning af hvert gennemsnit
mean_1 <- mean(lys_grøn$farve)
mean_2 <- mean(lys_brun$farve)
s <- 1.547
# Differencer
mean_diff <- mean_1 - mean_2
SE_diff <- sqrt( (1 / length(lys_grøn)) + (1 / length(lys_brun)) )
t_value <- qt(0.975, 2)
mean_diff + c(-1, 1) * SE_diff
# Del datasættet i to
lys_grøn <- subset(lyskilde, farve=="groen")
lys_brun <- subset(lyskilde, farve=="brun")
# Beregning af hvert gennemsnit
# mean_1 <- mean(lys_grøn$farve)
mean_2 <- mean(lys_brun$farve)
s <- 1.547
# Differencer
mean_diff <- mean_1 - mean_2
SE_diff <- sqrt( (1 / length(lys_grøn)) + (1 / length(lys_brun)) )
t_value <- qt(0.975, 2)
mean_diff + c(-1, 1) * SE_diff
# Del datasættet i to
lys_grøn <- subset(lyskilde, farve=="groen")
lys_brun <- subset(lyskilde, farve=="brun")
# Beregning af hvert gennemsnit
mean_1 <- mean(lys_grøn$frekvens)
mean_2 <- mean(lys_brun$frekvens)
s <- 1.547
# Differencer
mean_diff <- mean_1 - mean_2
SE_diff <- sqrt( (1 / length(lys_grøn)) + (1 / length(lys_brun)) )
t_value <- qt(0.975, 2)
mean_diff + c(-1, 1) * SE_diff
# Del datasættet i to
lys_grøn <- subset(lyskilde, farve=="groen")
lys_brun <- subset(lyskilde, farve=="brun")
# Beregning af hvert gennemsnit
mean_1 <- mean(lys_grøn$frekvens)
mean_2 <- mean(lys_brun$frekvens)
s <- 1.547
# Differencer
mean_diff <- mean_1 - mean_2
SE_diff <- sqrt( (1 / length(lys_grøn)) + (1 / length(lys_brun)) )
t_value <- qt(0.975, 16)
mean_diff + c(-1, 1) * SE_diff
# Del datasættet i to
lys_grøn <- subset(lyskilde, farve=="groen")
lys_brun <- subset(lyskilde, farve=="brun")
# Beregning af hvert gennemsnit
mean_1 <- mean(lys_grøn$frekvens)
mean_2 <- mean(lys_brun$frekvens)
s <- 1.547
# Differencer
mean_diff <- mean_1 - mean_2
SE_diff <- s * sqrt( (1 / length(lys_grøn)) + (1 / length(lys_brun)) )
t_value <- qt(0.975, 16)
mean_diff + c(-1, 1) * SE_diff
# Del datasættet i to
lys_grøn <- subset(lyskilde, farve=="groen")
lys_brun <- subset(lyskilde, farve=="brun")
# Beregning af hvert gennemsnit
mean_1 <- mean(lys_grøn$frekvens)
mean_2 <- mean(lys_brun$frekvens)
s <- 1.547
# Differencer
mean_diff <- mean_1 - mean_2
SE_diff <- s * sqrt( (1 / length(lys_grøn)) + (1 / length(lys_brun)) )
t_value <- qt(0.975, 2)
mean_diff + c(-1, 1) * SE_diff
# Del datasættet i to
lys_grøn <- subset(lyskilde, farve=="groen")
lys_brun <- subset(lyskilde, farve=="brun")
# Beregning af hvert gennemsnit
mean_1 <- mean(lys_grøn$frekvens)
mean_2 <- mean(lys_brun$frekvens)
s <- 1.547
# Differencer
mean_diff <- mean_1 - mean_2
SE_diff <- s * sqrt( (1 / length(lys_grøn)) + (1 / length(lys_brun)) )
t_value <- qt(0.975, 2)
mean_diff + c(-1, 1) * SE_diff
# Del datasættet i to
lys_grøn <- subset(lyskilde, farve=="groen")
lys_brun <- subset(lyskilde, farve=="brun")
# Beregning af hvert gennemsnit
mean_1 <- mean(lys_grøn$frekvens)
mean_2 <- mean(lys_brun$frekvens)
s <- 1.547
# Differencer
mean_diff <- mean_1 - mean_2
SE_diff <- s * sqrt( (1 / length(lys_grøn)) + (1 / length(lys_brun)) )
t_value <- qt(0.975, 2)
mean_diff + c(-1, 1) * t_value * SE_diff
# Del datasættet i to
lys_grøn <- subset(lyskilde, farve=="groen")
lys_brun <- subset(lyskilde, farve=="brun")
# Beregning af hvert gennemsnit
mean_1 <- mean(lys_grøn$frekvens)
mean_2 <- mean(lys_brun$frekvens)
s <- 1.547
# Differencer
mean_diff <- mean_1 - mean_2
SE_diff <- s * sqrt( (1 / length(lys_grøn)) + (1 / length(lys_brun)) )
t_value <- qt(0.975, 16)
mean_diff + c(-1, 1) * t_value * SE_diff
anova_result <- summary(linreg)
anova_result
mse <- summary(anova_result)[[1]][["Mean Sq"]][2]
