df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
#scale_x_continuous(breaks = seq(min(df_clean$X2021), max(df_clean$X2021), by = 1000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(min(df_clean$X2021), max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(min(df_clean$X2021), max(df_clean$X2021), by = 5000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(min(df_clean$X2021), max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = 0, max(df_clean$X2021), by = 10000)) +
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(min(df_clean$X2021), max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = 0, max(df_clean$X2021), by = 10000)) +
seq(min(df_clean$X2021)
seq(min(df_clean$X2021))
seq(min(df_clean$X2021), max(df_clean$X2021)
seq(min(df_clean$X2021), max(df_clean$X2021), by = 10000)
seq(min(df_clean$X2021), max(df_clean$X2021), by = 10000)
seq(0, max(df_clean$X2021), by = 10000)
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
seq(0, max(df_clean$X2021), by = 10000)
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(0, max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
rownames(df_clean) <- NULL
seq(0, max(df_clean$X2021), by = 10000)
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
#plot barchart
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(0, max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
rownames(df_clean) <- NULL
seq(0, max(df_clean$X2021), by = 10000)
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
#plot barchart
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmark's top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(0, max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
rownames(df_clean) <- NULL
seq(0, max(df_clean$X2021), by = 10000)
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
#plot barchart
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "GDP Per Capita in Denmark's top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(0, max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
rownames(df_clean) <- NULL
seq(0, max(df_clean$X2021), by = 10000)
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
#plot barchart
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "GDP Per Capita in Denmark's top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(0, max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
if(!require(ggplot2)){install.packages('ggplot2')}
library(tidyverse)
#Denmark Norway and Sweden
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean -- #####
keep <- c("Denmark", "Norway", "Sweden")
df_clean <- df_original[df_original$"Country.Code" %in% keep, ] #Keep Denmark, Norway and Sweden
reqd = c()
for (i in 0:9){
reqd[i+1] = paste("X", as.character(2012 + i), sep="")
}
df_clean <- subset(df_clean, select = reqd) #Keep only last 10 years
colnames(df_clean) <- c(1:10)
years <- seq(2012, 2021)
df_clean <- rbind(years, df_clean) #Add years to top
df_clean <- data.frame(t(df_clean[-1])) #Transpose
colnames(df_clean) <- c("year", keep)
if(!require(ggplot2)){install.packages('ggplot2')}
library(tidyverse)
#Denmark Norway and Sweden
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean -- #####
keep <- c("Denmark", "Norway", "Sweden")
df_clean <- df_original[df_original$"Country.Code" %in% keep, ] #Keep Denmark, Norway and Sweden
reqd = c()
for (i in 0:9){
reqd[i+1] = paste("X", as.character(2012 + i), sep="")
}
df_clean <- subset(df_clean, select = reqd) #Keep only last 10 years
colnames(df_clean) <- c(1:10)
years <- seq(2012, 2021)
df_clean <- rbind(years, df_clean) #Add years to top
df_clean <- data.frame(t(df_clean[-1])) #Transpose
colnames(df_clean) <- c("year", keep)
if(!require(ggplot2)){install.packages('ggplot2')}
library(tidyverse)
#Denmark Norway and Sweden
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean -- #####
keep <- c("Denmark", "Norway", "Sweden")
df_clean <- df_original[df_original$"Country.Code" %in% keep, ] #Keep Denmark, Norway and Sweden
reqd = c()
for (i in 0:9){
reqd[i+1] = paste("X", as.character(2012 + i), sep="")
}
df_clean <- subset(df_clean, select = reqd) #Keep only last 10 years
colnames(df_clean) <- c(1:10)
years <- seq(2012, 2021)
df_clean <- rbind(years, df_clean) #Add years to top
df_clean <- data.frame(t(df_clean[-1])) #Transpose
colnames(df_clean) <- c("year", keep)
if(!require(ggplot2)){install.packages('ggplot2')}
library(tidyverse)
#Denmark Norway and Sweden
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean -- #####
keep <- c("Denmark", "Norway", "Sweden")
df_clean <- df_original[df_original$"Country.Code" %in% keep, ] #Keep Denmark, Norway and Sweden
reqd = c()
for (i in 0:9){
reqd[i+1] = paste("X", as.character(2012 + i), sep="")
}
df_clean <- subset(df_clean, select = reqd) #Keep only last 10 years
if(!require(ggplot2)){install.packages('ggplot2')}
library(tidyverse)
#Denmark Norway and Sweden
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean -- #####
keep <- c("Denmark", "Norway", "Sweden")
df_clean <- df_original[df_original$"Country.Code" %in% keep, ] #Keep Denmark, Norway and Sweden
reqd = c()
for (i in 0:9){
reqd[i+1] = paste("X", as.character(2012 + i), sep="")
}
df_clean <- subset(df_clean, select = reqd) #Keep only last 10 years
colnames(df_clean) <- c(1:10)
years <- seq(2012, 2021)
df_clean <- rbind(years, df_clean) #Add years to top
df_clean <- data.frame(t(df_clean[-1])) #Transpose
if(!require(ggplot2)){install.packages('ggplot2')}
library(tidyverse)
#Denmark Norway and Sweden
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean -- #####
keep <- c("Denmark", "Norway", "Sweden")
df_clean <- df_original[df_original$"Country.Code" %in% keep, ] #Keep Denmark, Norway and Sweden
reqd = c()
for (i in 0:9){
reqd[i+1] = paste("X", as.character(2012 + i), sep="")
}
df_clean <- subset(df_clean, select = reqd) #Keep only last 10 years
colnames(df_clean) <- c(1:10)
years <- seq(2012, 2021)
df_clean <- rbind(years, df_clean) #Add years to top
df_clean <- data.frame(t(df_clean[-1])) #Transpose
colnames(df_clean) <- c("year", keep)
if(!require(ggplot2)){install.packages('ggplot2')}
library(tidyverse)
#Denmark Norway and Sweden
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean -- #####
keep <- c("Denmark", "Norway", "Sweden")
df_clean <- df_original[df_original$"Country.Code" %in% keep, ] #Keep Denmark, Norway and Sweden
reqd = c()
for (i in 0:9){
reqd[i+1] = paste("X", as.character(2012 + i), sep="")
}
df_clean <- subset(df_clean, select = reqd) #Keep only last 10 years
colnames(df_clean) <- c(1:10)
years <- seq(2012, 2021)
df_clean <- rbind(years, df_clean) #Add years to top
df_clean <- data.frame(t(df_clean[-1])) #Transpose
colnames(df_clean)
View(df_clean)
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
rownames(df_clean) <- NULL
seq(0, max(df_clean$X2021), by = 10000)
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
#plot barchart
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "GDP Per Capita in Denmark's top export countries", y = "Counrty", x = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(0, max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
cor(df_clean$year, df_clean$Denmark) #Correlation between x and y
if(!require(ggplot2)){install.packages('ggplot2')}
library(tidyverse)
#Denmark Norway and Sweden
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean -- #####
keep <- c("Denmark", "Norway", "Sweden")
df_clean <- df_original[df_original$"Country.Code" %in% keep, ] #Keep Denmark, Norway and Sweden
reqd = c()
for (i in 0:9){
reqd[i+1] = paste("X", as.character(2012 + i), sep="")
}
df_clean <- subset(df_clean, select = reqd) #Keep only last 10 years
colnames(df_clean) <- c(1:10)
years <- seq(2012, 2021)
df_clean <- rbind(years, df_clean) #Add years to top
df_clean <- data.frame(t(df_clean[-1])) #Transpose
colnames(df_clean)
colnames(df_clean) <- c("year", keep)
if(!require(ggplot2)){install.packages('ggplot2')}
library(tidyverse)
#Denmark Norway and Sweden
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean -- #####
keep <- c("Denmark", "Norway", "Sweden")
df_clean <- df_original[df_original$"Country.Code" %in% keep, ] #Keep Denmark, Norway and Sweden
reqd = c()
for (i in 0:9){
reqd[i+1] = paste("X", as.character(2012 + i), sep="")
}
df_clean <- subset(df_clean, select = reqd) #Keep only last 10 years
colnames(df_clean) <- c(1:10)
years <- seq(2012, 2021)
df_clean <- rbind(years, df_clean) #Add years to top
df_clean <- data.frame(t(df_clean[-1])) #Transpose
colnames(df_clean)
colnames(df_clean) <- c("year", keep)
if(!require(ggplot2)){install.packages('ggplot2')}
library(tidyverse)
#Denmark Norway and Sweden
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('path/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
if(!require(ggplot2)){install.packages('ggplot2')}
library(tidyverse)
#Denmark Norway and Sweden
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean -- #####
keep <- c("Denmark", "Norway", "Sweden")
df_clean <- df_original[df_original$"Country.Name" %in% keep, ] #Keep Denmark, Norway and Sweden
reqd = c()
for (i in 0:9){
reqd[i+1] = paste("X", as.character(2012 + i), sep="")
}
df_clean <- subset(df_clean, select = reqd) #Keep only last 10 years
colnames(df_clean) <- c(1:10)
years <- seq(2012, 2021)
df_clean <- rbind(years, df_clean) #Add years to top
df_clean <- data.frame(t(df_clean[-1])) #Transpose
colnames(df_clean) <- c("year", keep)
##### -- ggPlot (lm) -- #####
df <- df_clean %>%
gather(key = "country", value = "value", -year) #From wide to long
df["value"] <- df["value"] / 1000
df %>%
ggplot(aes(x = year, y = value, color = country)) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = FALSE, linetype = "dotted") +
labs(title = "GDP per capita",
x = "Year",
y = "current US$ (Thousands)",
color = "Country") +
scale_x_continuous(breaks = seq(min(df$year), max(df$year), by = 1)) +
theme_light()
###### -- Correlation -- #####
cor(df_clean$year, df_clean$Denmark) #Correlation between x and y
cor(df_clean$year, df_clean$Norway)
cor(df_clean$year, df_clean$Sweden)
##### - Linear Regression - ####
model <- lm(Denmark ~ year, data = df_clean)
summary(model)
#Prediction
year2026 <- data.frame(year = 2026)
predicted_gdp <- predict(model, newdata = year2026)
print(predicted_gdp)
