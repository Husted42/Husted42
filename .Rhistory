df_increase[df_increase$"Country.Name" == "Brunei Darussalam", "Country.Name"] <- "Brunei"
df_increase[df_increase$"Country.Name" == "Cote d'Ivoire", "Country.Name"] <- "Ivory Coast"
df_increase[df_increase$"Country.Name" == "Russian Federation", "Country.Name"] <- "Russia"
df_increase <- df_increase[df_increase$"Country.Name" %in% mapData$"region", ] #Remove rows where country.name != region
df_increase
colnames(df_increase)[colnames(df_increase) == "Country.Name"] ="region" #Rename to make left_join work
mapData <- left_join(mapData, df_increase, by="region")
#sum(is.na(mapData$increase)) # Count NA values : 29806
#mapData1 <- mapData %>% filter(!is.na(mapData$increase)) #Filter out NA values
#sum(is.na(mapData1$increase)) # Count NA values : 0
mapData$increase <- ifelse(mapData$increase < -50, -50, mapData$increase) #Fit min value to -50 or under
mapData$increase <- ifelse(mapData$increase > 50, 50, mapData$increase) #Fit max value to -50 or over
map1 <- ggplot(mapData, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = increase), color = "black") #Create map
map2 <- map1 + scale_fill_gradient(name = "Increase", low = "red", high =  "green", na.value = "grey50")+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
rect = element_blank())
print(map2 + ggtitle("Increase in GDP per capita from 2017 to 2021 \nFrom -50 or under to 50 or over"))
if(!require(ggplot2)){install.packages('ggplot2')}
library(tidyverse)
#Denmark Norway and Sweden
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean -- #####
keep <- c("Denmark", "Norway", "Sweden")
df_clean <- df_original[df_original$"Country.Name" %in% keep, ] #Keep Denmark, Norway and Sweden
reqd = c()
for (i in 0:9){
reqd[i+1] = paste("X", as.character(2012 + i), sep="")
}
df_clean <- subset(df_clean, select = reqd) #Keep only last 10 years
colnames(df_clean) <- c(1:10)
years <- seq(2012, 2021)
df_clean <- rbind(years, df_clean) #Add years to top
df_clean <- data.frame(t(df_clean[-1])) #Transpose
colnames(df_clean) <- c("year", keep)
##### -- ggPlot (lm) -- #####
df <- df_clean %>%
gather(key = "country", value = "value", -year) #From wide to long
df["value"] <- df["value"] / 1000
df %>%
ggplot(aes(x = year, y = value, color = country)) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = FALSE, linetype = "dotted") +
labs(title = "GDP per capita",
x = "Year",
y = "current US$ (Thousands)",
color = "Country") +
scale_x_continuous(breaks = seq(min(df$year), max(df$year), by = 1)) +
theme_light()
df %>%
ggplot(aes(x = year, y = value, color = country)) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = FALSE, linetype = "dotted") +
labs(title = "GDP per capita",
x = "Year",
y = "current US$ (Thousands)",
color = "Country") +
scale_x_continuous(breaks = seq(min(df$year), max(df$year), by = 1)) +
theme_light()
##### -- Packages -- #####
#install.packages("ggplot2")
#install.packages("map")
#install.packages("tidyverse")
##### -- Libaries -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
if(!require(tidyverse)){install.packages('tidyverse')}
##### -- Load data -- #####
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean data -- #####
colnames(df_original)
reqd <- c("Country.Name", "X2017", "X2021")
reqd
df_clean <- subset(df_original, select = reqd) #
df_clean <- na.omit(df_clean) #Remove rows with NA
df_clean
##### -- Calculate increase -- #####
vec2017 <- df_clean$"X2017" #Turn col into vectors
vec2021 <- df_clean$"X2021"
vec_increase <- (vec2021 - vec2017) / vec2021 * 100 #Calculate increase in pct
df_increase <- subset(df_clean, select = ("Country.Name"))
df_increase$increase <- vec_increase #Add vector to dataframe
# - View(df_increase)
##### -- Map -- #####
mapData <- map_data("world") #ggplot2
#Fit names manually
countyNames1 <- (unique(mapData["region"]))
countyNames2 <- (unique(df_increase["Country.Name"]))
write.csv(countyNames1, "C:/C/gitHub/code/R/visual/mapDataRegion.csv", row.names=FALSE)
write.csv(countyNames2, "C:/C/gitHub/code/R/visual/df_increaseCountryName.csv", row.names=FALSE)
df_increase[df_increase$"Country.Name" == "United Kingdom", "Country.Name"] <- "UK"
df_increase[df_increase$"Country.Name" == "United States", "Country.Name"] <- "USA"
df_increase[df_increase$"Country.Name" == "Bahamas, The", "Country.Name"] <- "Bahamas"
df_increase[df_increase$"Country.Name" == "Brunei Darussalam", "Country.Name"] <- "Brunei"
df_increase[df_increase$"Country.Name" == "Cote d'Ivoire", "Country.Name"] <- "Ivory Coast"
df_increase[df_increase$"Country.Name" == "Russian Federation", "Country.Name"] <- "Russia"
df_increase <- df_increase[df_increase$"Country.Name" %in% mapData$"region", ] #Remove rows where country.name != region
df_increase
colnames(df_increase)[colnames(df_increase) == "Country.Name"] ="region" #Rename to make left_join work
mapData <- left_join(mapData, df_increase, by="region")
mapData$increase <- ifelse(mapData$increase < -50, -50, mapData$increase) #Fit min value to -50 or under
mapData$increase <- ifelse(mapData$increase > 50, 50, mapData$increase) #Fit max value to -50 or over
map1 <- ggplot(mapData, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = increase), color = "black") #Create map
map2 <- map1 + scale_fill_gradient(name = "Increase", low = "red", high =  "green", na.value = "grey50")+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
rect = element_blank())
print(map2 + ggtitle("Increase in GDP per capita from 2017 to 2021 \nFrom -50 or under to 50 or over"))
if(!require(ggplot2)){install.packages('ggplot2')}
library(tidyverse)
#Denmark Norway and Sweden
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean -- #####
keep <- c("Denmark", "Norway", "Sweden")
df_clean <- df_original[df_original$"Country.Name" %in% keep, ] #Keep Denmark, Norway and Sweden
reqd = c()
for (i in 0:9){
reqd[i+1] = paste("X", as.character(2012 + i), sep="")
}
df_clean <- subset(df_clean, select = reqd) #Keep only last 10 years
colnames(df_clean) <- c(1:10)
years <- seq(2012, 2021)
df_clean <- rbind(years, df_clean) #Add years to top
df_clean <- data.frame(t(df_clean[-1])) #Transpose
colnames(df_clean) <- c("year", keep)
##### -- ggPlot (lm) -- #####
df <- df_clean %>%
gather(key = "country", value = "value", -year) #From wide to long
df["value"] <- df["value"] / 1000
df %>%
ggplot(aes(x = year, y = value, color = country)) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = FALSE, linetype = "dotted") +
labs(title = "GDP per capita",
x = "Year",
y = "current US$ (Thousands)",
color = "Country") +
scale_x_continuous(breaks = seq(min(df$year), max(df$year), by = 1)) +
theme_light()
View(countyNames2)
View(countyNames1)
##### -- Load data -- #####
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean data -- #####
colnames(df_original)
reqd <- c("Country.Name", "X2017", "X2021")
reqd
df_clean <- subset(df_original, select = reqd) #
df_clean <- na.omit(df_clean) #Remove rows with NA
df_clean
##### -- Calculate increase -- #####
vec2017 <- df_clean$"X2017" #Turn col into vectors
vec2021 <- df_clean$"X2021"
vec_increase <- (vec2021 - vec2017) / vec2021 * 100 #Calculate increase in pct
df_increase <- subset(df_clean, select = ("Country.Name"))
df_increase$increase <- vec_increase #Add vector to dataframe
# - View(df_increase)
##### -- Map -- #####
mapData <- map_data("world") #ggplot2
View(mapData)
##### -- Packages -- #####
#install.packages("ggplot2")
#install.packages("map")
#install.packages("tidyverse")
##### -- Libaries -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
if(!require(tidyverse)){install.packages('tidyverse')}
##### -- Load data -- #####
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean data -- #####
colnames(df_original)
reqd <- c("Country.Name", "X2017", "X2021")
reqd
df_clean <- subset(df_original, select = reqd) #
df_clean <- na.omit(df_clean) #Remove rows with NA
df_clean
##### -- Calculate increase -- #####
vec2017 <- df_clean$"X2017" #Turn col into vectors
vec2021 <- df_clean$"X2021"
vec_increase <- (vec2021 - vec2017) / vec2021 * 100 #Calculate increase in pct
df_increase <- subset(df_clean, select = ("Country.Name"))
df_increase$increase <- vec_increase #Add vector to dataframe
# - View(df_increase)
##### -- Map -- #####
mapData <- map_data("world") #ggplot2
#Fit names manually
countyNames1 <- (unique(mapData["region"]))
countyNames2 <- (unique(df_increase["Country.Name"]))
#write.csv(countyNames1, "C:/C/gitHub/code/R/visual/mapDataRegion.csv", row.names=FALSE)
#write.csv(countyNames2, "C:/C/gitHub/code/R/visual/df_increaseCountryName.csv", row.names=FALSE)
df_increase[df_increase$"Country.Name" == "United Kingdom", "Country.Name"] <- "UK"
df_increase[df_increase$"Country.Name" == "United States", "Country.Name"] <- "USA"
df_increase[df_increase$"Country.Name" == "Bahamas, The", "Country.Name"] <- "Bahamas"
df_increase[df_increase$"Country.Name" == "Brunei Darussalam", "Country.Name"] <- "Brunei"
df_increase[df_increase$"Country.Name" == "Cote d'Ivoire", "Country.Name"] <- "Ivory Coast"
df_increase[df_increase$"Country.Name" == "Russian Federation", "Country.Name"] <- "Russia"
df_increase <- df_increase[df_increase$"Country.Name" %in% mapData$"region", ] #Remove rows where country.name != region
df_increase
colnames(df_increase)[colnames(df_increase) == "Country.Name"] ="region" #Rename to make left_join work
mapData <- left_join(mapData, df_increase, by="region")
mapData$increase <- ifelse(mapData$increase < -50, -50, mapData$increase) #Fit min value to -50 or under
mapData$increase <- ifelse(mapData$increase > 50, 50, mapData$increase) #Fit max value to -50 or over
map1 <- ggplot(mapData, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = increase), color = "black") #Create map
map2 <- map1 + scale_fill_gradient(name = "Increase", low = "red", high =  "green", na.value = "grey50")+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
rect = element_blank())
print(map2 + ggtitle("Increase in GDP per capita from 2017 to 2021 \nFrom -50 or under to 50 or over"))
if(!require(ggplot2)){install.packages('ggplot2')}
library(tidyverse)
#Denmark Norway and Sweden
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
df_original
##### -- Clean -- #####
keep <- c("Denmark", "Norway", "Sweden")
df_clean <- df_original[df_original$"Country.Name" %in% keep, ] #Keep Denmark, Norway and Sweden
reqd = c()
for (i in 0:9){
reqd[i+1] = paste("X", as.character(2012 + i), sep="")
}
df_clean <- subset(df_clean, select = reqd) #Keep only last 10 years
colnames(df_clean) <- c(1:10)
years <- seq(2012, 2021)
df_clean <- rbind(years, df_clean) #Add years to top
df_clean <- data.frame(t(df_clean[-1])) #Transpose
colnames(df_clean) <- c("year", keep)
##### -- ggPlot (lm) -- #####
df <- df_clean %>%
gather(key = "country", value = "value", -year) #From wide to long
df["value"] <- df["value"] / 1000
df %>%
ggplot(aes(x = year, y = value, color = country)) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", se = FALSE, linetype = "dotted") +
labs(title = "GDP per capita",
x = "Year",
y = "current US$ (Thousands)",
color = "Country") +
scale_x_continuous(breaks = seq(min(df$year), max(df$year), by = 1)) +
theme_light()
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
#scale_x_continuous(breaks = seq(min(df_clean$X2021), max(df_clean$X2021), by = 1000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(min(df_clean$X2021), max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(min(df_clean$X2021), max(df_clean$X2021), by = 5000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(min(df_clean$X2021), max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = 0, max(df_clean$X2021), by = 10000)) +
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(min(df_clean$X2021), max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = 0, max(df_clean$X2021), by = 10000)) +
seq(min(df_clean$X2021)
seq(min(df_clean$X2021))
seq(min(df_clean$X2021), max(df_clean$X2021)
seq(min(df_clean$X2021), max(df_clean$X2021), by = 10000)
seq(min(df_clean$X2021), max(df_clean$X2021), by = 10000)
seq(0, max(df_clean$X2021), by = 10000)
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
rownames(df_clean) <- NULL
seq(0, max(df_clean$X2021), by = 10000)
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(0, max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
rownames(df_clean) <- NULL
seq(0, max(df_clean$X2021), by = 10000)
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
#plot barchart
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmarks top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(0, max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
rownames(df_clean) <- NULL
seq(0, max(df_clean$X2021), by = 10000)
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
#plot barchart
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "Denmark's top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(0, max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
##### -- Setup -- #####
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
#GDP per capita (current US$) - https://data.worldbank.org/indicator/NY.GDP.PCAP.CD
df_original <- read.csv('C:/C/gitHub/code/R/visual/data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_5447781.csv',
header = TRUE, sep = ',', na.strings = c("NA"))
keep <- c("USA", "DEU", "SWE", "GBR", "NOR") #Keep contries
df_clean <- df_original[df_original$"Country.Code" %in% keep, ]
df_clean <- df_clean[c("Country.Name", "X2021")]
rownames(df_clean) <- NULL
seq(0, max(df_clean$X2021), by = 10000)
#Info
dim(df_clean)
names(df_clean)
sapply(df_clean, mode)
#plot barchart
ggplot(data = df_clean, aes(x=X2021, y=reorder(Country.Name, X2021))) +
geom_bar(stat="identity", aes(fill = X2021)) +
labs(title = "GDP Per Capita in Denmark's top export countries", x = "Counrty", y = "GDP per capita") +
scale_fill_gradient(name = "GDP Per Capita") +
scale_x_continuous(breaks = seq(0, max(df_clean$X2021), by = 10000)) +
theme_light() +
theme(legend.position = "none")
